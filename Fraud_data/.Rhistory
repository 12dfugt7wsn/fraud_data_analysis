data1
data1<-read_csv("Fraud_Data.csv")
library(readr)
library(tidyverse)
data1<-read_csv("Fraud_Data.csv")
data1 <- mutate(data1,num=data1$class)
data1$class=as.factor(data1$class)
library(plotly)
library(readr)
library(tidyverse)
data1<-read_csv("Fraud_Data.csv")
data1 <- mutate(data1,num=data1$class)
data1$class=as.factor(data1$class)
library(plotly)
data1%>%
ggplot(data1,mapping=aes(x=age,y=..density..,color=class))+
geom_freqpoly()
ggplot(data1)+
geom_freqpoly(mapping = aes(x=purchase_value,y=..density..,color=class))
a<-data1%>%
mutate(time=purchase_time-signup_time)%>%
ggplot()+
geom_freqpoly(mapping = aes(x=time,y=..density..,color=class))
library(IPtoCountry)
data1%>%
filter (ip_address >= 16777216, ip_address<=3758096383)%>%
mutate(country=IP_lookup(ip_address))%>%
group_by(country)%>%
summarize(prop=sum(num)/n(),number=n())%>%
filter(number>=100, prop>=0.1)%>%
arrange(desc(prop))
data1 %>%
group_by(source)%>%
summarise(sum(num)/n())
data1 %>%
group_by(browser)%>%
summarise(sum(num)/n())
data1 %>%
group_by(sex)%>%
summarise(sum(num)/n())
data1%>%
group_by(browser,source)%>%
mutate(prop=sum(num)/n())%>%
ggplot(mapping = aes(x=browser,y=source)) +
geom_tile(mapping = aes(fill=prop))
data1%>%
group_by(device_id)%>%
summarise(number_of_fraud=sum(num),prop=sum(num)/n())%>%
filter(number_of_fraud>5)%>%
arrange(desc(prop))
data1
data1
data1
ip<-read_csv("IpAddress_to_Country.csv")
data1
ip<-read.csv("IpAddress_to_Country.csv")
data1
ip<-read.csv("IpAddress_to_Country.csv")
ip
data1%>%
arrange(user_id)
ip<-read.csv("IpAddress_to_Country.csv")
ip%>%
arrange(lower_bound_ip_address)
ip<-read.csv("IpAddress_to_Country.csv")
View(ip%>%
mutate(range=upper_bound_ip_address-lower_bound_ip_address)%>%
arrange(range))
view(data1)
View(data1)
for (count in data1.summarise_(n())){
if (data1$ip_address>=ip$lower_bound_ip_address & data1$ip_address<=ip$upper_bound_ip_address){
mutate(data1,country = ip$country)
}
}
for (count in summarise_(data1,n())){
if (data1$ip_address>=ip$lower_bound_ip_address & data1$ip_address<=ip$upper_bound_ip_address){
mutate(data1,country = ip$country)
}
}
for (count in count(data1,n())){
if (data1$ip_address>=ip$lower_bound_ip_address & data1$ip_address<=ip$upper_bound_ip_address){
mutate(data1,country = ip$country)
}
}
for (i in count(data1,n())){
if (data1$ip_address>=ip$lower_bound_ip_address & data1$ip_address<=ip$upper_bound_ip_address){
mutate(data1,country = ip$country)
}
}
for (i in 1ï¼š100){
for (i in 1:100){
if (data1$ip_address>=ip$lower_bound_ip_address & data1$ip_address<=ip$upper_bound_ip_address){
mutate(data1,country = ip$country)
}
}
?between()
library(data.table)
dt <- ip%>% as.data.table()
dt
library(data.table)
dt <- ip%>% as.data.table()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
library(data.table)
dt <- ip%>% as.data.table()
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkey(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
library(data.table)
dt <- ip%>% as.data.table()
setkeyv(dt,c("lower_bound_ip_address","upper_bound_ip_address"))
tick<- Sys.time()
dt[341674740<upper_bound_ip_address &341674740 >lower_bound_ip_address]
toc<-Sys.time()
toc-tick
install.packages("foreach")
x <- foreach(i=1:3) %do% sqrt(i)
install.packages("doParalla")
install.packages("doParallel")
library(foreach)
library(doParallel)
x <- foreach(i=1:3) %do% sqrt(i)
x <- foreach(i=1:3) %do% sqrt(i)
ttt<-character()
foreach(i = 1:10,.combine='c')%do%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
ttt<-character()
foreach(i = 1:10,.combine='c')%do%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
ttt<-character()
res_v<-foreach(i = 1:10, .combine='c')%do%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
library(foreach)
library(doParallel)
ttt<-character()
res_v<-foreach(i = 1:10, .combine='c')%do%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
ttt<-character()
res_v<-foreach(i = 1:10, .combine='c')%dopart%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
ttt<-character()
res_v<-foreach(i = 1:10, .combine='c')%doPart%{
ipp<- df$ip_address[i]
temp_ttt<-dt[ipp<upper_bound_ip_address & ipp>lower_bound_ip_address,country]
temp_ttt
}
